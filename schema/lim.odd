<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="https://tei-c.org/release/xml/tei/custom/schema/relaxng/tei_odds.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="https://tei-c.org/release/xml/tei/custom/schema/relaxng/tei_odds.rng" type="application/xml"
	schematypens="http://purl.oclc.org/dsdl/schematron"?>
<TEI xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:svg="http://www.w3.org/2000/svg"
  xmlns:math="http://www.w3.org/1998/Math/MathML" xmlns="http://www.tei-c.org/ns/1.0">
  <teiHeader>
    <fileDesc>
      <titleStmt>
        <title>Schema and Encoding Guidelines for the <title level="m">Lyon in Mourning</title> Project</title>
      </titleStmt>
      <publicationStmt>
        <p>Probably free?</p>
      </publicationStmt>
      <sourceDesc>
        <p>No source; born digital.</p>
      </sourceDesc>
    </fileDesc>
    <encodingDesc>
      <tagsDecl>
        <rendition xml:id="rnd_code">
           font-family: monospace;
        </rendition>
      </tagsDecl>
      <listPrefixDef>
        <prefixDef ident="doc" matchPattern="(.+)(#.+)?" replacementPattern="$1.xml$2">
          <p>Mechanism for pointing to a document in the repository. E.g. <val>doc:vol11_vol1</val>.</p>
        </prefixDef>
      </listPrefixDef>
    </encodingDesc>
  </teiHeader>
  <text>
    <front>
      <div>
        <head>Encoding Guidelines</head>
        <p>This document serves as the documentation for <title level="m">The Lyon in Mourning: Networking Jacobites</title> (LiM). At the moment, what follows is a collection of notes to help with planning the project's structure and workflow; as decisions are made and plans are concretized, this document will be updated to reflect the actual encoding principles and guidelines.</p>
      </div>
    </front>
    <body>
      <div>
        <head>Directory Structure</head>
          <list type="tree" rendition="#rnd_code">
            <item>root/
              <list>
                <item>data/
                  <list>
                    <item>volumes/
                      <list>
                        <item>vol1/
                            <list>
                              <item>???</item>
                            </list>
                        </item>
                        <item>vol2/</item>
                        <item>+++</item>
                        <item>vol11/
                          <list>
                            <item>vol11_vol1.xml</item>
                            <item>vol11_vol2.xml</item>
                            <item>+++</item>
                          </list>
                        </item>
                      </list>
                    </item>
                    <item>people.xml</item>
                    <item>places.xml</item>
                    <item>organizations.xml</item>
                  </list>
                </item>
                <item>
                  schema/
                  <list>
                    <item>lim.odd</item>
                    <item>lim.rng</item>
                  </list>
                </item>
                <item>lim.xpr</item>
              </list>
            </item>
          </list>
      </div>
      <div>
        <head>Possible Approach</head>
        <list rend="simple">
          <item>Encoding starts with the eleventh volume since it is the index for the entire manuscript</item>
          <item>The encoding for that volume would be fairly straightforward:
            <list rend="simple">
              <item>Each volume is a <gi>list</gi> with each index entry as an <gi>item</gi></item>
              <item>The item should have a fairly simple structure; probably something like:
              <egXML xmlns="http://www.tei-c.org/ns/Examples">
                <item>
                  <rs><!--Title of the item--></rs>
                  <num><!--Page number--></num>
                </item>
              </egXML>
              
              We would not want to capture any of the source information here (i.e. not tagging the genre or medium of the piece). We may, however, want to start tagging people and places (or at least begin identifying the people, places, etc in the text.
              </item>
              <item>I'm not sure, though, whether or not we'd want to encode some corrections/expansions/etc in the title. We probably will want that information anyway, though, so we may do something like:
                <egXML xmlns="http://www.tei-c.org/ns/Examples">
                  <item>
                    <rs>Letter from the <choice><abbr>Revt.</abbr><expan>Reverend</expan></choice> Mr. Robert Lyon to his mother <choice><abbr>+</abbr><expan>and</expan></choice> Sisters</rs>
                    <num>1</num>
                  </item>
                </egXML>
                
                If we start identifying pieces of information in the text, we want to do something like:
                
                <egXML xmlns="http://www.tei-c.org/ns/Examples">
                  <item>
                    <rs>Letter from the <choice><abbr>Revt.</abbr><expan>Reverend</expan></choice> Mr. <persName key="Robert Lyon">Robert Lyon</persName> to his mother <choice><abbr>+</abbr><expan>and</expan></choice> Sisters</rs>
                    <num>1</num>
                  </item>
                </egXML>
                
             If we used the <att>key</att> approach, then we could harvest all of the names/places <emph>after</emph> the index is encoded, which provides a basic structure for research later (i.e. we have all of the names and places, or the vast majority of them).
                
              </item>
            </list>
          
          </item>
          <item>Once the the eleventh volume is encoded, then the index is used to generate all of the constituent files in the volume. So each <gi>item</gi> becomes a file with each <gi>rs</gi> gaining a <att>target</att> that points to the new file.</item>
          
        </list>
        
        <p>For the rest of the volumes, we may want to have a structure where:
          <list>
            <item>Each volume has an index file named the same as the directory:
                  <list rendition="#rnd_code">
                    <item>vol1/
                      <list>
                        <item>vol1.xml</item>
                      </list>
                    </item>
                  </list>
            </item>
            <item>The index file is a <gi>teiCorpus</gi> element that contains information about the facsimile and the metadata for the entire volume:
            <egXML xmlns="http://www.tei-c.org/ns/Examples">
              <teiCorpus xml:id="vol1">
                <teiHeader>
                  <fileDesc>
                    <titleStmt>
                      <title>The Lyon in Mourning Vol. 1</title>
                      <!--More metadata-->
                    </titleStmt>
                  </fileDesc>
                  <!--Lots more metadata about the entire manuscript: provenance, editors, date of creation, etc-->
                </teiHeader>
                <facsimile>
                  <surface xml:id="vol1_0001">
                    <graphic url="path/to/images/0001"/>
                  </surface>
                  <surface xml:id="vol1_0002">
                    <graphic url="path/to/images/0002"/>
                  </surface>
                </facsimile>
                <!--[...]-->
              </teiCorpus>
            </egXML>
              The suggestion to use a <gi>teiCorpus</gi> stems from the need for complex, structured metadata for each individual item, which is best done through the <gi>teiHeader</gi> (probably using the suite of elements contained in <gi>textDesc</gi> and/or taxonomies encoded using <gi>taxonomy</gi>, <gi>category</gi> and <gi>catRef</gi>).
            </item>
            
          </list>
        
        </p>
        
      </div>
      <div>
        <head>Questions to work through</head>
        <list>
          <item>
            <label>Best way to include the documents into the corpus?</label>
            <p>We could use XIncludes: that would be a formal and broadly processable way of handling the structure (but it would mean that all of our schemas/processing/etc would need to know how to handle them properly; Saxon think it does, but it can be a bit messy or wrong). An alternative approach could be to use processing-instructions, which would be a custom solution.</p>
            <p>Or, since the <gi>text</gi> element is allowed in <gi>teiCorpus</gi>, we could organize the information using text and structure it with pointers or something else:
            <egXML xmlns="http://www.tei-c.org/ns/Examples">
              <text>
                <front>
                  <linkGrp>
                    <ptr target="foo.xml"/>
                    <ptr target="bar.xml"/>
                  </linkGrp>
                </front>
                <body>
                  <linkGrp>
                    <ptr target="baz.xml"/>
                    <ptr target="blort.xml"/>
                  </linkGrp>
                </body>
              </text>
            </egXML>
            That might the right way to do it, since that would basically provide the true TOC for that collection that better structures the corpus as a whole.
            </p>
          </item>
          <item>
            <label>How to Name Documents?</label>
          </item>
          <item>
          </item>
        </list>
      </div>
      
    </body>
    <back>
      <div>
        <schemaSpec ident="lim" start="TEI list">
          <moduleRef key="core" include="abbr author bibl choice corr date del desc divGen editor emph expan foreign gap gloss graphic head hi imprint item l label lb lg list listBibl mentioned milestone name note num orig p pb ptr pubPlace publisher quote ref reg resp respStmt sic term title unclear"/>
          <!--Not sure we need anything from corpus: check proposal-->
          <!--<moduleRef key="corpus"/>-->
          <!--Adding a lot of GAIJI module stuff, since I imagine we'll be
          dealing with some unfamiliar characters?-->
          <moduleRef key="gaiji" include="char charDecl charName charProp g glyph glyphName mapping unicodeName unicodeProp"/>
          
          <!--Add quite a few of the header elements, but we may need more-->
          <moduleRef key="header" include="abstract catDesc catRef category change correspAction correspContext correspDesc encodingDesc fileDesc handNote idno listChange listPrefixDef notesStmt prefixDef profileDesc projectDesc publicationStmt rendition revisionDesc sourceDesc tagsDecl taxonomy teiHeader textClass titleStmt"/>
          
          <moduleRef key="linking" include="linkGrp ptr"/>
          
          <!--We may need some components from msdescription, but it depends-->
          <!--<moduleRef key="msdescription"/>-->
          
          <moduleRef key="namesdates" include="addName birth death faith floruit forename genName langKnowledge langKnown listOrg listPerson listPlace location nameLink nationality occupation org orgName persName person persona place placeName residence roleName surname"/>
          
          <!--Include all attributes-->
          <moduleRef key="tei"/>
          
          
          <moduleRef key="textstructure" include="TEI body byline closer dateline div docAuthor docDate docEdition docImprint docTitle epigraph front imprimatur opener postscript salute signed titlePart text trailer"/>
          
          <moduleRef key="transcr" include="damage damageSpan delSpan facsimile fw handNotes handShift metamark supplied surface surfaceGrp zone"/>
          
          
        </schemaSpec>
      </div>
    </back>
  </text>
</TEI>
