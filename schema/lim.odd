<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="https://tei-c.org/release/xml/tei/custom/schema/relaxng/tei_odds.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="https://tei-c.org/release/xml/tei/custom/schema/relaxng/tei_odds.rng" type="application/xml"
	schematypens="http://purl.oclc.org/dsdl/schematron"?>
<TEI xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:svg="http://www.w3.org/2000/svg"
  xmlns:sch="http://purl.oclc.org/dsdl/schematron"
  xmlns:math="http://www.w3.org/1998/Math/MathML" xmlns="http://www.tei-c.org/ns/1.0"
  xml:lang="en">
  <teiHeader>
    <fileDesc>
      <titleStmt>
        <title>Schema and Encoding Guidelines for the <title level="m">Lyon in Mourning</title> Project</title>
        <respStmt>
          <resp>Principle Investigator</resp>
          <name>Leith Davis</name>
        </respStmt>
      </titleStmt>
      <publicationStmt>
        <p>Probably free?</p>
      </publicationStmt>
      <sourceDesc>
        <p>No source; born digital.</p>
      </sourceDesc>
    </fileDesc>
    <encodingDesc>
      <tagsDecl>
        <rendition xml:id="rnd_code">
           font-family: monospace;
        </rendition>
      </tagsDecl>
      <listPrefixDef>
        <prefixDef ident="doc" matchPattern="(.+)(#.+)?" replacementPattern="$1.xml$2">
          <p>Mechanism for pointing to a document in the repository. E.g. <val>doc:vol11_vol1</val>.</p>
        </prefixDef>
        <prefixDef ident="islandora" matchPattern="(\d+)" replacementPattern="https://digital.lib.sfu.ca/islandora/object/lyoninmourning:$1">
          <p>Resolves links to SFU's Islandora collection for the Lyon in Mourning page images.</p>
        </prefixDef>
        <prefixDef ident="lib" matchPattern="(\d+)" replacementPattern="#sfu_pg_$1">
          <p>Resolves links from a page in a volume to a facsimile element.</p>
        </prefixDef>
        <prefixDef ident="prs" matchPattern="(.+)" replacementPattern="people.xml#$1">
          <p>Resolves links to a person to the personography.</p>
        </prefixDef>
        <prefixDef ident="plc" matchPattern="(.+)" replacementPattern="places.xml#$1">
          <p>Resolves links to a place to the geography.</p>
        </prefixDef>
        <prefixDef ident="obj" matchPattern="(.+)" replacementPattern="objects.xml#$1">
          <p>Resolves links to an object to the object database.</p>
        </prefixDef>
      </listPrefixDef>
    </encodingDesc>
  </teiHeader>
  <text>
    <front>
      <div>
        <head>Encoding Guidelines</head>
        <p>This document serves as the documentation for <title level="m">The Lyon in Mourning: Networking Jacobites</title> (LiM). At the moment, what follows is a collection of notes to help with planning the project's structure and workflow; as decisions are made and plans are concretized, this document will be updated to reflect the actual encoding principles and guidelines.</p>
      </div>
    </front>
    <body>
      <div>
        <head>Helpful Links</head>
        <list>
          <item><ref target="https://digital.lib.sfu.ca/lyoninmourning-collection/lyon-mourning">Lyon in Mourning facsimiles (SFU)</ref></item>
          <item><ref target="https://docs.github.com/en/desktop">GitHub Desktop Documentation</ref></item>
          
          <item><ref target="https://tei-c.org/guidelines/">TEI Guidelines</ref></item>
          <item>Paton Edition:
            
            <list>
              <item>Volume 1
                <list>
                  <item><ref target="https://www.gutenberg.org/files/43222/43222-h/43222-h.htm">Full Text Transcription (Project Gutenberg)</ref></item>
                  <item>
                    <ref target="https://digital.nls.uk/print/transcriptions/lyon/vol1/index.html">Indexed PDF (NLS)</ref>
                  </item>
                  <item><ref target="https://view.nls.uk/mirador/125649979">Zoomable Book Viewer (NLS)</ref></item>
                </list>
              
              </item>
              <item>Volume 2:
                <list>
                  <item>
                    <ref target="https://digital.nls.uk/print/transcriptions/lyon/vol2/index.html">Indexed PDF (NLS)</ref>
                  </item>
                </list>
              
              </item>
              <item>Volume 3:
              <list>
                <item>
                  <ref target="https://digital.nls.uk/print/transcriptions/lyon/vol3/index.html">Indexed PDF (NLS)</ref>
                </item>
              </list>
              </item>
            </list>
          </item>
        </list>
        <divGen xml:id="helpful_links_facs"/>
        
      </div>
      <div>
        <head>Getting Started</head>
        <div>
          <head>Setting up</head>
          <p>Before working on the LiM documents, there are two pieces of software you will need to install: oXygen XML Editor and Github Desktop. You will also need a Github account.</p>
          <list type="instructions">
            <item>Provide the DHIL with your GitHub account username. If you do not have a GitHub account, you can create a free account here: <ptr target="https://github.com/join"/>.</item>
            <item>Download and install oXygen:  <ptr target="https://www.oxygenxml.com/xml_editor/download_oxygenxml_editor.html"/>. Members of the LiM team should contact the DHIL regarding license keys.</item>
            <item>Download and install the GitHub desktop client: <ptr target="https://desktop.github.com/"/></item>
          </list>
        </div>
        <div>
          <head>Setting up oXygen</head>
          <div>
            <head>Using the Project File</head>
            <list>
              <item>Open oXygen</item>
              <item>If this is your first time opening oXygen, you can close most of the panes on the right-hand and bottom side of your editor window. Make sure, however, that you retain the <term>Project</term> pane.</item>
              <item>In the toolbar, click <code>Project/Open Project</code> and navigate the <code>lim-data</code> directory.</item>
              <item>Open the <code>lim-schema.xpr</code> file and accept the popup notification from oXygen.</item>
            </list>
          </div>
          <div>
            <head>Installing the LiM Encoding Tools/Schemas/Framework</head>
             <list>
               <item>In the toolbar, click <code>Help/Install New Add Ons</code>:
                 <graphic url="images/install-addons.png">
                   <desc>Install add on</desc>
                 </graphic>
   
                 
               </item>
               <item>In the text box, paste the following URL:<lb/>
               <code>https://github.com/sfu-dhil/lim-schema/releases/latest/download/updateSite.xml</code>
                 <graphic url="images/select-addon.png">
                   <desc>Install add on</desc>
                 </graphic>
               </item>
                <item>Accept all of the notifications</item>
              <item>Restart oXygen</item>               
             </list>
          </div>
        </div>
      </div>
      
      <div>
        <head>Workflow</head>
        <div>
          <head>Updating your Repository</head>
          <p>Update your local copy of the repository by merging any changes from the <term>upstream</term> repository. To do so:</p>
            <list type="instructions">
              <item>Open GitHub Desktop and click the <term>branch</term> tab (the second tab on the top; it will say something like "main"):
                <figure>
                  <graphic url="images/branch_menu.png"/>
                  <figDesc>Branch Menu</figDesc>
                </figure>
              </item>
              <item>In the <term>branch menu</term>, click <q>Choose branch to merge into <hi style="font-weight:bold">main</hi></q>:
                <figure>
                  <graphic url="images/choose_branch_merge.png"/>
                  <figDesc>Choose branch to merge menu</figDesc>
                </figure>
              </item>
              <item>Click on <q>upstream/main</q>:
                <figure>
                  <graphic url="images/select_upstream_main.png"/>
                  <figDesc>Select upstream/main</figDesc>
                </figure>
              </item>
              <item>
                Depending on whether your repository is up to date:
                <list>
                  <item>If there are no changes to merge (<q>This branch is up to date ...</q>), then you're done!</item>
                  <item>If there are changes to merge (<q>This will merge x commits...</q>), then click <q>Merge upstream/main</q></item>
                </list>
              </item>
            </list>
        </div>
        <div>
          <head>Editing in oXygen</head>
          <p>All work on the TEI documents should be done in oXygen. It is an incredibly powerful and useful tool for editing XML and there are a number of custom features and tools that will editing easier and more efficient.</p>
          <p>When you open oXygen, make sure you see the <code>lim-data.xpr</code> project in the oXygen project pane (usually on the left-hand side):
          <figure>
            <graphic url="images/oxygen_splash.png"/>
            <figDesc>Project pane</figDesc>
          </figure>
            oXygen remembers the last project you opened, so it will usually use the <code>lim-data</code> project file automatically. If, for whatever reason, you are not in the <code>lim-data</code> project, make sure to open the project file by going to <code>Project/Open Project</code> in the toolbar. You can use the Project pane to navigate through the project files; all of the TEI files are in the <code>data/</code> folder.
          </p>
          
          <p>As you edit your TEI file in oXygen, it is imperative that you frequently and consistently <emph>validate</emph> your file. Invalidities in an oXygen are signalled much like spell-check: the invalid element is underlined in red and its location in the document is marked in the scrollbar.</p>
            
            <p>oXygen validates for you automatically as you type, but it might lag (especially for large or complex documents), so it is best practice to trigger validation manually as well, especially before committing your changes.</p>
          
          <p>To validate your document, you can either use the keyboard shortcut CMD+Shift+V (CMD = ⌘ on Mac) or click the red checkmark in the toolbar:
            
            <figure>
              <graphic url="images/oxygen_validation_valid.png"/>
              <figDesc>A valid document</figDesc>
            </figure>
            
            Once the document finishes validating, there will be a message at the bottom of the screen stating whether validation was successful. If there are errors in your document and validation fails, you will see the red underlines and a info box at the bottom of the screen that outlines the precise errors.
          
          <figure>
            <graphic url="images/oxygen_validation_errors.png"/>
            <figDesc>Validation Errors</figDesc>
          </figure>
        Try your best to determine what the error is: the validation message usually provides a good indication of what the pfrom the validation message (some are more helpful than others); the problem is quite often something simple like a typo, an errant space at the beginning or end of an element, or a missing quotation mark.
          </p>
          <p>If you can't figure out the error, then it is OK to commit the file, but do let the team and the developers know right away so that the error can be resolved as soon as possible.</p>
        </div>
        <div>
          <head>Committing Changes</head>
          <p>After you've made a set of changes (i.e. before you take a break or before the end of your work day) and confirmed that they were valid, you need to commit those changes to the repository. To do that, navigate to GitHub Desktop, which should show you a list of changes that you've made:
           <figure>
             <graphic url="images/changes.png"/>
             <figDesc>Changes in GitHub Desktop</figDesc>
           </figure> 
          </p>
          <p>It is a good idea to review those changes to make sure everything looks right (i.e. all of the files that you actually changed are listed; there are no additional changes). (You may see that the <code>lim-data.xpr</code> oXygen project file has changed even though you didn't do anything to it—that's expected).</p>
          <p>Assuming that everything looks correct, you can then commit those files by filling out the commit message boxes in the bottom left-hand corner:
              <figure>
                <graphic url="images/commit_box.png"/>
                <figDesc>Commit box</figDesc>
              </figure>
            These commit messages are helpful for record keeping and for tracking changes to the files; note that these commit messages are both permanent and public. In the <code>Summary</code> field, add a brief description of what you've done (i.e. "Added index items for vol7"). If there is additional information you'd like to add, put a longer explanation in the <code>Description</code> box.
          </p>
        </div>
       
      </div>
      
      <div>
        <head>Encoding the Index Volume (Volume 11)</head>
            <p>As the volume 11 contains the index for the other 10 volumes, the encoding for volume 11 is slightly different from a standard TEI encoding framework. The folder structure looks like so:
              <list>
                <item>vol11/
                  <list>
                    <item>vol11.xml</item>
                    <item>vol11_vol1.xml</item>
                    <item>vol11_vol2.xml</item>
                    <item>vol11_vol3.xml</item>
                    <item>[...]</item>
                  </list>
                </item>
              </list>
            </p>
            <p>The <code>vol11.xml</code> file contains all of the metadata for volume 11, but does not contain the transcription for the volume. Instead, each volume its own <term>fragment file</term> that contains the transcription for that volume's section within the index. This is mostly for convience: splitting the files this way makes it easier for multiple encoders to work on the index at the same time. Note that these fragment files do not begin with the standard <gi>TEI</gi> element, but instead use a special type of <gi>div</gi> (<gi>div</gi>/<att>type</att>="<val>index</val>") that contains the transcription for that section of the index. Each file will look something like this:       
              <egXML xmlns="http://www.tei-c.org/ns/Examples">
                <div type="index" xml:id="vol11_vol1">
                  <!--[...]-->
                </div>
              </egXML>
            </p>
        <div>
          <head>Index and Page Numbers</head>
          <table>
            <row role="label">
              <cell>Volume</cell>
              <cell>Library</cell>
              <cell>Steuart page</cell>
              <cell>NLS folio</cell>
              <cell>Note</cell>
              <cell>Forbes</cell>
              <cell>Paton</cell>
            </row>
            <row>
              <cell>Volume 2</cell>
              <cell>Library 13</cell>
              <cell>Steuart 3</cell>
              <cell>NLS 5</cell>
              <cell>at top of page</cell>
              <cell>Forbes 199</cell>
              <cell>Paton 1:113</cell>
   
            </row>
            <row>
              <cell>Volume 3</cell>
              <cell>Library 15</cell>
              <cell>Steuart 4</cell>
              <cell>NLS 6</cell>
              <cell>half way down page</cell>
              <cell>Forbes 381</cell>
              <cell>Paton 1:210</cell>
         
            </row>
            <row>
              <cell>Volume 4</cell>
              <cell>Library 23</cell>
              <cell>Steuart 8</cell>
              <cell>NLS 10</cell>
              <cell>halfway down page</cell>
              <cell>Forbes 625</cell>
              <cell>Paton 1:344</cell>
            </row>
            <row>
              <cell>Volume 5</cell>
              <cell>Library 31</cell>
              <cell>Steuart 12</cell>
              <cell>NLS 15</cell>
              <cell>halfway down page but no note</cell>
              <cell>Forbes 869</cell>
              <cell>Paton 2:76</cell>
            </row>
            <row>
              <cell>Volume 6</cell>
              <cell>Library 39</cell>
              <cell>Steuart 16</cell>
              <cell>NLS 18</cell>
              <cell>halfway down page but no note</cell>
              <cell>Forbes 1113</cell>
              <cell>Paton 2:200</cell>
            </row>
            <row>
              <cell>Volume 7</cell>
              <cell>Library 53</cell>
              <cell>Steuart 23</cell>
              <cell>NLS 25</cell>
              <cell>three from the top but no note</cell>
              <cell>Forbes 1357</cell>
              <cell>Paton 2:320</cell>
            </row>
            <row>
              <cell>Volume 8</cell>
              <cell>Library 67</cell>
              <cell>Steuart 29</cell>
              <cell>NLS 32</cell>
              <cell>three from the top but no note</cell>
              <cell>Forbes 1599</cell>
              <cell>Paton 3:65</cell>
            </row>
            <row>
              <cell>Volume 9</cell>
              <cell>Library 77</cell>
              <cell>Steuart 34</cell>
              <cell>NLS 37</cell>
              <cell>1/2 way down page but no note</cell>
              <cell>Forbes 1841</cell>
              <cell>Paton 3:188 </cell>
            </row>
            <row>
              <cell>Volume 10</cell>
              <cell>Library 105</cell>
              <cell>Steuart 48</cell>
              <cell>NLS 51</cell>
              <cell>1/2 way down page but no note</cell>
              <cell>Forbes 3015</cell>
              <cell>Paton 3:356</cell>
            </row>
          </table>
        </div>
        
        <div>
          <head>Encoding pages</head>
          <p>Use a self-closing (i.e. empty) <gi>pb</gi> element to denote the <emph>start</emph> of a new <emph>physical</emph> page in the manuscript. In most cases, the <gi>pb</gi> element should go exactly where it happens in flow of the text.</p>
          
          <p>As an example, let's look at these four pages of the introduction from volume 11:
            <figure>
              <graphic url="images/vol11_pg3.jpg"/>
              <figDesc><ref target="https://digital.lib.sfu.ca/lyoninmourning-2642/%E2%80%98lyon-mourning%E2%80%99-bishop-robert-forbess-collection-jacobite-papers-index-volume">Volume 11, page 3.</ref></figDesc>
              
            </figure>
            <figure>
              <graphic url="images/vol11_pg4.jpg"/>
              <figDesc>
                <ref target="https://digital.lib.sfu.ca/lyoninmourning-2641/%E2%80%98lyon-mourning%E2%80%99-bishop-robert-forbess-collection-jacobite-papers-index-volume">Volume 11, page 4.</ref>
              </figDesc>
            </figure></p>
          <p>While there are two <emph>digitized</emph> images, the encoding for the above should contain four <gi>pb</gi> elements, one for each of:
            <list>
              <item>the blank verso page</item>
              <item>the recto page</item>
              <item>the blank verso page</item>
              <item>the recto page</item>
            </list>
Since the first paragraph of text extends across the page boundary, we place the <gi>pb</gi> within the middle of the paragraph:
            
            <egXML xmlns="http://www.tei-c.org/ns/Examples">
              <pb facs="lib:3"/>
              <pb facs="lib:3"/>
              <div type="preface">
                <lb/>
                <opener>
                  <salute>Dear <persName>Mr. Blank</persName>,</salute>
                </opener>
                <lb/>
                <p>I have at rescued
                  <lb/> the <title level="m">Index to the Lion in Mourning</title> from
                  <lb/>my father's hands where it has lain
                  <lb/> <!--[....]-->
                  <lb/>Chambers thirteen years ago. You may
                  <pb facs="lib:4"/>
                  <pb facs="lib:4"/>
                  <fw type="pageNum" place="right">2</fw>
                  <lb/>therefore submit the matter to the 
                  <lb/>Curators whenever you choose.</p>
              </div>
            </egXML>
          </p>
          <p>There are a few things to note here:
          <list>
            <item>Each line of text is denoted by using the <gi>lb</gi> (line beginning) element. Like the <gi>pb</gi> element, the <gi>lb</gi> element is self-closing and denotes the <emph>beginning</emph> of a line.</item>
            <item>Each <gi>pb</gi> element also has a <att>facs</att> attribute that denotes the <emph>SFU Library page number</emph> by using the special <val>lib:</val> prefix. The <att>facs</att> attribute, in other words, provides a mechanism for aligning the transcription with the digital images housed at SFU library.</item>
            <item>We encode the written page number using the <gi>fw</gi> (formework) element with an <att>type</att> value of <val>pageNum</val> and an <att>place</att> value of <val>right</val>.</item>
          </list>
          </p>
        </div>
        
        <div>
          <head>Encoding the Indexes</head>
          <p>Each indexed volume has a separate file that will house your transcription. These are a bit strange compared to the rest of the documents; they begin with a <gi>div</gi> element, rather than a <gi>TEI</gi> (this is because these aren't distinct documents, but rather fragments all contained with one document).</p>
          <p>Each volume's index can be considered as a single <gi>list</gi> with each letter, narrative, etc found in the manuscript as a separate <gi>item</gi> in that list:
          <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <div type="index" xml:id="vol11_vol1">
              <pb facs="lib:9"/>
              <fw type="pageNum" place="left">1</fw>
              <fw type="pageNum" place="right">3</fw>
              <list>
                <item><!--The first item--></item>
                <item><!--The second item--></item>
                <!--....-->
              </list>
            </div>
          </egXML>
          Like above, these documents should contain all of the bibliographic information for the document (i.e. page beginnings [<gi>pb</gi>], page numbers and other formeworks [<gi>fw</gi>], etc).
          </p>
          
          <div>
            <head>Index Items</head>
            <div>
              <head>Basic Structure</head>
              <p>Within the <gi>list</gi>, encode each item as a separate <gi>item</gi> that contains the title of the piece and a page number, encoded using the <gi>title</gi> and <gi>num</gi> tag, respectively:
                
                <egXML xmlns="http://www.tei-c.org/ns/Examples">
                  <list>
                    <lb/>
                    <item>
                      <!--Encoding of the title simplified for demonstrative purposes...-->
                      <title>Letter from the Revt. Mr. Lyon to his mother + Sisters</title>
                      <num>1</num>
                    </item>
                  </list>
                </egXML>
                Note that we do not encode information about the separating line between the page number and the title.
              </p>
            </div>
            <div>
              <head>Line Beginnings</head>
              <p>All line beginnings must be encoded using the <gi>lb</gi> element; always include the <gi>lb</gi> precisely where the line <emph>begins</emph>. (Note that there is no equivalent <soCalled>line ending</soCalled> tag.)</p>
              <p>Since XML collapses all whitespace to a single space, it is not imperative that the line beginning is preceded or followed by a carriage return or a space. For consistency's sake, however, the project recommends placing a hard return <emph>before</emph> the line beginning tag and placing no spaces after the <gi>lb</gi>
                <egXML xmlns="http://www.tei-c.org/ns/Examples">
                  <!--Note that the lb goes before the block element-->
                  <lb/>
                  <p>Here is a 
                  <lb/>the second line and then the
                  <lb/>third line.</p>
                </egXML>
              </p>
              <p>Line beginnings preceded by a piece of punctuation to denote end-of-line hyphens (or, in the case of Steuart, colons) require a bit of special tagging:
              <list>
                <item>Encode the punctuation using the <gi>pc</gi> element with a <att>force</att>=<val>weak</val></item>
                <item>Do not put any spaces before or after the <gi>lb</gi></item>
              </list>
                For example:
              <egXML xmlns="http://www.tei-c.org/ns/Examples">
                <title>Copy of a Letter from <persName ref="prs:16"><choice><abbr>Captn.</abbr><expan>Captain</expan></choice> Malcolm Mac<pc force="weak">;</pc><lb/>Leod</persName>
                </title>
              </egXML>
              </p>
            </div>
            <div>
              <head>Marginalia in Index Items</head>
              <p>Some of the index items will have marginal marks or annotations associated with that item that we want to capture. To do so, encode the note text using <gi>note</gi> element with an <att>place</att> to signal the note's position. The <gi>note</gi> element should be contained within the <gi>item</gi> with which it is associated. For example: this item from volume 11:
                
                <figure>
                  <graphic url="images/item_with_note.png">
                    <desc>From volume 11; item with note.</desc>
                  </graphic>
                </figure>
                
                is encoded like so: 
                
                
                <egXML xmlns="http://www.tei-c.org/ns/Examples">
                  <item>
                    <note place="left">v</note>
                    <title>Speech of Mr. Theodore Deacon</title>
                    <num>37</num>
                  </item>
                </egXML>
              </p>
            </div>
          </div>
          
        </div>
        
      </div>
      
      <div>
        <head>Transcribing and Editing</head>
        <p>The following instructions apply to all editorial changes made to a text; this includes features like editorial notes, expanding abbreviations, correction of spelling, or supplying clarifying text.</p>
        <div>
          <head>Adding Editorial Notes</head>
          <p>To add an editorial note, use the <gi>note</gi> tag with an <att>type</att>=<val>editorial</val>:
            <egXML xmlns="http://www.tei-c.org/ns/Examples">
              <note type="editorial">An editorially supplied note.</note>
            </egXML>
            The <att>type</att> is important here: it distinguishes the editorially supplied note from other notes and annotations made by Forbes or later editors.</p>
        </div>
        <div>
          <head>Abbreviations and Expansions</head>
          <p>Uncommon or unfamiliar abbreviations—like <mentioned>Revt</mentioned>—will often need to be expanded in order to provide clarity and to facilitate searching. To do so, first tag the abbreviation with the <gi>abbr</gi> element, then tag your expansion with an <gi>expan</gi>, and then wrap both in a <gi>choice</gi> element. For example:
            
            <egXML xmlns="http://www.tei-c.org/ns/Examples">
              <title>Letter from the <choice><abbr>Revt.</abbr><expan>Reverend</expan></choice> Mr. <persName>Lyon</persName></title>
            </egXML>
          </p>
          <p>The <gi>choice</gi> element is known in TEI-speak as a <term>Janus</term> element: it always contains two elements—one original, and one editorially supplied.</p>
        </div>
        
        <div>
          <head>Corrections</head>
          <p>Correcting erronous text follows a similar protocol: use the <gi>sic</gi> element to tag the original error and a <gi>corr</gi> for the correction, wrapping both in a <gi>choice</gi>:
            <egXML xmlns="http://www.tei-c.org/ns/Examples">
              <choice><sic>acount</sic><corr>account</corr></choice>
            </egXML>
          </p>
        </div>
        <div>
          <head>Uncertainty</head>
          <p>If you are uncertain about either an expansion or a correction, use the <att>cert</att> attribute with a value of "low", "medium", or "high" to flag uncertainty about your editorial emendation:
          <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <choice><sic>acount</sic><corr cert="low">a count</corr></choice>
          </egXML>
          </p>
        </div>
        <div>
          <head>Unclear Text</head>
          <p>Tag text that you are unable to transcribe text that is partially obscured for some reason (illegible writing, scan is missing or incompletel, external damage like ink smudges, etc) using the <gi>unclear</gi> element:
            <egXML xmlns="http://www.tei-c.org/ns/Examples">
              <unclear>MacDonald</unclear>
            </egXML>
            If you'd like to expand on what is unclear, or possible other readings, then add a note beside the <gi>unclear</gi> using the <gi>note</gi> element with <att>type</att>=<val>editorial</val>
            <egXML xmlns="http://www.tei-c.org/ns/Examples">
              <unclear>MacDonald</unclear><note type="editorial">Quite likely MacDonald, but could also be McDonald.</note>
            </egXML>
          </p>
          <p>If you are unable to transcribe the text at all or the text has been removed completely (i.e. the page is burnt; the text is cut off in the facsimile), use the <gi>gap</gi> element with an explanatory <gi>desc</gi>:
          <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <gap><desc>First six words illegible due to scan.</desc></gap>
          </egXML>
          </p>
        </div>
        <div>
          <head>Deletions</head>
          <p>Tag text that has been marked for deleting using the <gi>del</gi> element:
          <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <title>Written in <del>in</del> April</title>
          </egXML>
            If the deletion has obscured the text such that it makes the text difficult (but not impossible) to transcribe, nest the <gi>unclear</gi> tag within the <gi>del</gi>; as above, add an editorial note if warrants further explanation or clarification is needed (note, however, that the <gi>note</gi> is beside the <gi>del</gi> element):
            
            <egXML xmlns="http://www.tei-c.org/ns/Examples">
              <title>While I pondered weak and <del><unclear>wary</unclear></del><note type="editorial">Possibly <mentioned>weary</mentioned>.</note></title>
            </egXML>
          </p>
          <p>If the text is rendered completely illegible, then use a <gi>gap</gi> element with an explanatory <gi>desc</gi> within the <gi>del</gi>:
            <egXML xmlns="http://www.tei-c.org/ns/Examples">
              <title>While I pondered weak and <del><gap><desc>Illegible</desc></gap></del></title>
            </egXML>
          
          </p>
        </div>
        <div>
          <head>Foreign Language</head>
          <p>To tag that something is in a foreign language, use the <att>xml:lang</att> attribute with an ISO language tag value for that language (<ptr target="#TEI.teidata.language"/> for the list of language tags).</p>
          <p>How and where you attach that <att>xml:lang</att> depends on whether the segment of foreign language is entirely contained by a single element. For instance, if an entire <gi>title</gi> in an <gi>item</gi> is in French, then you can place the <att>xml:lang</att> directly on the <gi>item</gi>:
            <egXML xmlns="http://www.tei-c.org/ns/Examples">
              <item>
                <title xml:lang="fr">Le petit chien</title>
              </item>
              
            </egXML>
        If the foreign language appears has no logical wrapper (i.e. a single foreign phrase in a sentence or a foreign word), then use the <gi>foreign</gi> element:
           <egXML xmlns="http://www.tei-c.org/ns/Examples">
             <item>
               <title>This example was created <foreign xml:lang="la">ex nihilo</foreign></title>
             </item>
           </egXML>
          
          </p>
        </div>
      </div>
      <div>
        <head>Tagging People, Places, etc in Transcriptions</head>
        <p>Note: Currently, we use a Google Spreadsheet to record basic information about people and places (the "database"); this is a temporary stop-gap until vol11 is encoded.</p>
        <p>People, places, and other <term>named entities</term> are tagged in a similar fashion: each name is tagged using a distinguishing tag with an <att>ref</att> attribute that points to the associated id. They also share a set of common rules:
        <list>
          <item>They must not begin or end with spaces</item>
          <item>They must use the <att>ref</att> to refer to the entity's record</item>
          <item>They can contain phrase- and word-level elements (i.e. <gi>choice</gi>, <gi>add</gi>, <gi>supplied</gi>, etc)</item>
          <item>They cannot nest: i.e. do not put a <gi>placeName</gi> inside of a <gi>persName</gi>.</item>
        </list>
        </p>
        <div>
          <head>People</head>
          <p>Direct references to people should be tagged using the <gi>persName</gi> element that uses the <att>ref</att> attribute to point to the person's id using the special <val>prs:</val> prefix. For instance:
          <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <persName ref="prs:1">Mr. Lyon</persName>
          </egXML>
            Where <val>prs:1</val> refers to the person's id in the person database/spreadsheet. 
            
          </p>
          <p>As mentioned above, personal names should include any honourifics or titles, which may be editorially expanded:
          <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <persName ref="prs:1"><choice><abbr>Revt.</abbr><expan>Reverend</expan></choice> Mr. Lyon</persName>
          </egXML>
          </p>
          <p>Do not use <gi>persName</gi> to tag <term>indirect</term> references to people—e.g. <q>The King</q>; <q>His mother</q>; <q>That Guy</q>—as these are not personal names, but references to a person. In these cases, instead of <gi>persName</gi>, use the <gi>rs</gi> (referring string) element with <att>type</att>=<val>person</val> alongside the <att>ref</att> attribute that points to the person. For instance:
          <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <rs type="person" ref="prs:3">his mother</rs>
          </egXML>
          </p>
          <p>Groups of people that are not organizations (i.e. Parliament) or anonymous groups (the audience) can be tagged as if they are a single person:
            <egXML xmlns="http://www.tei-c.org/ns/Examples">
              <rs type="person" ref="prs:4">Sisters</rs>
            </egXML>
          </p>
          <p>The above examples all derive from the first item of vol11_vol1; here is what it looks in its entirety:
           <egXML xmlns="http://www.tei-c.org/ns/Examples">
             <title>Letter from the <persName ref="prs:1"><choice><abbr>Revt.</abbr><expan>Reverend</expan></choice> Mr. <persName>Lyon</persName></persName> to <rs type="person" ref="prs:3">his mother</rs> <choice><abbr>+</abbr><expan>and</expan></choice> <rs type="person" ref="prs:4">Sisters</rs></title>
           </egXML>
          </p>
        </div>
        <div>
          <head>Places</head>
          <p>See summary below.</p>
        </div>
        <div>
          <head>Events</head>
          <p>TODO</p>
        </div>
        <div>
          <head>Objects</head>
          <p>TODO</p>
        </div>
        <div>
          <head>Summary</head>
          <table>
            <row role="label">
              <cell>Type</cell>
              <cell>Direct Reference</cell>
              <cell>Indirect Reference</cell>
              <cell><att>ref</att> prefix</cell>
            </row>
            <row role="data">
              <cell>person</cell>
              <cell><gi>persName</gi></cell>
              <cell>
                <egXML xmlns="http://www.tei-c.org/ns/Examples">
                  <rs type="person" ref="prs:3">his mother</rs>
                </egXML>
              </cell> <cell><val>prs:</val></cell>
            </row>
            <row role="data">
              <cell>place</cell>
              <cell><gi>placeName</gi></cell>
              <cell>
                <egXML xmlns="http://www.tei-c.org/ns/Examples">
                  <!--This is made up-->
                  <rs type="place" ref="plc:4">across the field</rs>
                </egXML>
              </cell>
              <cell><val>plc:</val></cell>
            </row>
            <row role="data">
              <cell>event</cell>
              <cell>
                <!--TODO-->
              </cell>
              <cell>
                <!--TODO-->
              </cell>
              <cell>
                <!--TODO-->
              </cell>
            </row>
            <row role="data">
              <cell>object</cell>
              <cell>
                <!--TODO-->
              </cell>
              <cell>
                <!--TODO-->
              </cell>
              <cell>
                <!--TODO-->
              </cell>
            </row>
          </table>
        </div>
      </div>
     
    </body>
    

    
    <back>
      <div>
        <head>Appendix</head>
        <schemaSpec ident="lim" start="TEI div person place">
          
          <!--ANALYSIS-->
          <moduleRef key="analysis" include="pc"/>
          <elementSpec ident="pc" mode="change" module="analysis">
            <!--Remove all other attributes-->
            <classes mode="change">
              <memberOf key="att.global" mode="delete"/>
              <memberOf key="att.segLike" mode="delete"/>
              <memberOf key="att.typed" mode="delete"/>
            </classes>
            <content>
              <textNode/>
            </content>
            <constraintSpec ident="pc.onlyPunct" scheme="schematron"
              mode="add">
              <desc>Only punctuation in pc.</desc>
              <constraint>
                <!--TODO: Remove @ref once feasible-->
                <sch:rule context="tei:pc">
                  <sch:assert test="matches(text(),'^[\p{P}=]$')">ERROR: Only a single punctuation character is allowed in pc</sch:assert>
                  <sch:assert test="following-sibling::node()[1][self::tei:lb]">ERROR: All pc elements must be followed immediately by an lb element.</sch:assert>
                </sch:rule>
              </constraint>
            </constraintSpec>
            <attList>
              <attDef ident="unit" mode="delete"/>
              <attDef ident="pre" mode="delete"/>
              <attDef ident="force" mode="change" usage="req"/>
            </attList>
          </elementSpec>
          
          
          <!--CORE-->
          <moduleRef key="core" include="abbr author bibl choice corr date del desc divGen editor emph expan foreign gap gloss graphic head hi imprint item l label lb lg list listBibl mentioned milestone name note num orig p pb ptr pubPlace publisher quote ref reg resp respStmt rs sic term title unclear"/>
          
          <elementSpec ident="abbr" module="core" mode="change">

            <classes mode="change">
              <!--Remove from pPart.editorial, since it should only be in <choice>-->
              <memberOf key="model.pPart.editorial" mode="delete"/>
              <!--Add cert and resp-->
              <memberOf key="att.global.responsibility" mode="add"/>
            </classes>
            <constraintSpec ident="abbr.shouldntContainJustAmp" scheme="schematron"
              mode="add">
              <desc>Don't expand the ampersand only.</desc>
              <constraint>
                <!--TODO: Remove @ref once feasible-->
                <sch:rule context="tei:abbr">
                  <sch:let name="content" value="string(.)"/>
                  <sch:assert test="not(matches($content, '^\s*&amp;\s*$'))">ERROR: There is no need to tag ampersands when it means "and".</sch:assert>
                </sch:rule>
              </constraint>
            </constraintSpec>
          </elementSpec>
          <elementSpec ident="expan" module="core" mode="change">
            <classes mode="change">
              <!--Remove from pPart.editorial, since it should only be in <choice>-->
              <memberOf key="model.pPart.editorial" mode="delete"/>
              <!--Add cert and resp-->
              <memberOf key="att.global.responsibility" mode="add"/>
            </classes>
          </elementSpec>
          <elementSpec ident="sic" module="core" mode="change">
            <classes mode="change">
              <!--Remove from pPart.transcriptional, since it should only be in <choice>-->
              <memberOf key="model.pPart.transcriptional" mode="delete"/>
              <!--Add cert and resp-->
              <memberOf key="att.global.responsibility" mode="add"/>
            </classes>
          </elementSpec>
          <elementSpec ident="corr" module="core" mode="change">
            <classes mode="change">
              <!--Remove from pPart.transcriptional, since it should only be in <choice>-->
              <memberOf key="model.pPart.transcriptional" mode="delete"/>
              <!--Add cert and resp-->
              <memberOf key="att.global.responsibility" mode="add"/>
            </classes>
          </elementSpec>
          
          <elementSpec ident="lb" module="core" mode="change">
            <constraintSpec ident="lb.noSpaces" scheme="schematron">
              <constraint>
                <sch:rule context="tei:lb[preceding-sibling::node()[1][self::tei:pc]]">
                 <sch:assert test="matches(following::text()[1],'^\S')">ERROR: All punctuation separated words in lines should not have any spaces after the line beginning element.</sch:assert>
                </sch:rule>
              </constraint>
            </constraintSpec>
          </elementSpec>
          
          <elementSpec ident="pb" module="core" mode="change">
              <classes mode="change">
                <memberOf key="att.global" mode="delete"/>
                <memberOf key="att.typed" mode="delete"/>
                <memberOf key="att.global.facs" mode="add"/>
              </classes>
              <attList>
                <!--Make @facs required-->
                <attDef ident="facs" mode="change" usage="req"/>
              </attList>
          </elementSpec>
          
          <elementSpec ident="rs" module="core" mode="change">
            <attList>
              <attDef ident="type" mode="change" usage="req">
                <valList mode="change">
                  <valItem mode="add" ident="person">
                    <gloss>person</gloss>
                    <desc>An indirect reference to a person (e.g. "his father"); use &lt;persName&gt; for direct references (i.e. "John Smith").</desc>
                  </valItem>
                  <valItem mode="add" ident="event">
                    <gloss>event</gloss>
                    <desc>An indirect reference to an event (e.g. "the day"); use &lt;name type="event"&gt; for direct references to events.</desc>
                  </valItem>
                  <valItem mode="add" ident="place">
                    <gloss>place</gloss>
                    <desc>An indirect reference to a place (e.g. "over there"); use &lt;placeName&gt; for direct references to places (i.e. "Edinburgh").</desc>
                  </valItem>
                  <valItem mode="add" ident="object">
                    <gloss>object</gloss>
                    <desc>An indirect reference to an object (e.g. "that thing"); use &lt;name type="object"&gt; for direct references to objects (i.e. "Excalibur").</desc>
                  </valItem>
                </valList>
              </attDef>
            </attList>
          </elementSpec>
          
          <elementSpec ident="name" module="core" mode="change">
            <constraintSpec ident="name.notForPeopleOrPlaces" mode="change" scheme="schematron">
              <desc>Name should only be used if there isn't a more specific element.</desc>
              <constraint>
                <!--TODO: Remove @ref once feasible-->
                <sch:rule context="tei:name[@ref]">
                  <sch:assert test="not(matches(@ref,'^prs:'))">ERROR: Use &lt;persName&gt; to tag names of people.</sch:assert>
                  <sch:assert test="not(matches(@ref,'^plc:'))">ERROR: Use &lt;placeName&gt; to tag names of places.</sch:assert>
                </sch:rule>
              </constraint>
            </constraintSpec>
            <attList>
              <attDef ident="type" mode="change" usage="req">
                <valList type="closed" mode="add">
                  <valItem ident="event" mode="add">
                    <gloss>event</gloss>
                    <desc>The name of an event (e.g. "The Battle of Prestonpans")</desc>
                  </valItem>
                  <valItem ident="object" mode="add">
                    <gloss>object</gloss>
                    <desc>The name of an object (e.g. "Excalibur")</desc>
                  </valItem>
                </valList>
              </attDef>
            </attList>
          </elementSpec>
          
          <elementSpec ident="note" module="core" mode="change">
            <classes mode="change">
              <memberOf key="att.pointer" mode="delete"/>
            </classes>
            <constraintSpec ident="note.co-occurence" scheme="schematron">
              <desc>Various co-occurence constraints</desc>
              <constraint>
                <sch:pattern>
                  <sch:rule context="tei:note[@type='marginalia']">
                    <sch:assert test="@place">ERROR: All marginalia must have an @place.</sch:assert>
                  </sch:rule>
                </sch:pattern>
              </constraint>
            </constraintSpec>
            <constraintSpec ident="note.mustHaveTypeInText" scheme="schematron">
              <desc>Notes must be typed in the body</desc>
              <constraint>
                <sch:pattern>
                  <sch:rule context="tei:note[ancestor::tei:text]">
                    <sch:assert test="@type">ERROR: All notes in transcriptions must have a @type.</sch:assert>
                  </sch:rule>
                </sch:pattern>
              </constraint>
            </constraintSpec>
              <attList>
                <attDef ident="type" mode="change" usage="opt">
                  <valList type="closed">
                    <valItem ident="editorial">
                      <gloss>editorial note</gloss>
                      <desc>An editorial note written by a team member.</desc>
                    </valItem>
                    <valItem ident="marginalia">
                      <gloss>marginalia</gloss>
                      <desc>A note that's not a footnote, but is some sort of marginal note.</desc>
                    </valItem>
                  </valList>
                </attDef>
              </attList>
          </elementSpec>
          
          <!--Include all of corpus-->
          <moduleRef key="corpus"/>
          
          <!--Add quite a few of the header elements, but we may need more-->
          <moduleRef key="header" include="abstract catDesc catRef category change correspAction correspContext correspDesc encodingDesc fileDesc handNote idno listChange listPrefixDef notesStmt prefixDef profileDesc projectDesc publicationStmt rendition revisionDesc sourceDesc tagsDecl taxonomy teiHeader textClass titleStmt"/>
          


          <moduleRef key="linking" include="linkGrp ptr"/>
          
          <!--We may need some components from msdescription, but it depends-->
          <!--<moduleRef key="msdescription"/>-->

          
          <moduleRef
            key="namesdates" 
            include="addName birth death faith floruit forename genName langKnowledge langKnown listOrg listPerson listPlace location nameLink nationality occupation org orgName persName person persona place placeName residence roleName sex surname"/>
          
          <elementSpec ident="person" module="namesdates" mode="change">
            <content>
              <macroRef key="lim.personMacro"/>
              <!--Add linkGrp optionally only for person, not persona-->
              <elementRef key="linkGrp" minOccurs="0" maxOccurs="1"/>
            </content>
            <constraintSpec ident="person.constraints" scheme="schematron">
              <desc>Various constraints for the different models for contributors and non-contributors.</desc>
              <constraint>
                <sch:rule context="tei:person[not(@role='contributor')]">
                  <sch:assert
                    test="matches(@xml:id,concat('^', $persIdPattern, '$'))">ERROR: All people must have an @xml:id of 5 uppercase letters and a number (e.g. FORBR1).</sch:assert>
                  <sch:assert test="tei:langKnowledge">ERROR: People must contain a langKnowledge element.</sch:assert>
                </sch:rule>
                <sch:rule context="tei:person[@role='contributor']">
                  <sch:assert test="matches(@xml:id, '^[A-Z]{2}\d+$')">ERROR: All contributors must have an @xml:id of 2 uppercase letters and a number (e.g. LD1).</sch:assert>
                  <sch:assert test="tei:persName and tei:note">ERROR: Contributors should only contain persName and note.</sch:assert>
                </sch:rule>
              </constraint>
            </constraintSpec>
            <attList>
              <attDef ident="xml:id" mode="change" usage="req"/>
              <attDef ident="age" mode="delete"/>
              <!--Remove @sex, since we use the element instead-->
              <attDef ident="sex" mode="delete"/>
              <attDef ident="role" mode="change">
                <valList>
                  <valItem ident="contributor" mode="add">
                    <desc>contributor</desc>
                    <gloss>a contemporary contributor to the Lyon in Mourning project</gloss>
                  </valItem>
                </valList>
              </attDef>
            </attList>
          </elementSpec>
          
          <elementSpec ident="persona" module="namesdates" mode="change">
            <content>
              <macroRef key="lim.personMacro"/>
            </content>
          </elementSpec>
          
          <elementSpec ident="persName" module="namesdates" mode="change">
             <constraintSpec ident="persName.mustHaveRefWithPrs" mode="add" scheme="schematron">
               <desc>All inline persNames must have a ref that points to the personography db.</desc>
               <constraint>
                 <!--TODO: Remove @ref once feasible-->
                 <sch:rule context="tei:persName[not(parent::tei:person)][@ref]">
                   <sch:assert test="matches(@ref,concat('^prs:', $persIdPattern, '$'))">ERROR: All persName pointers must have an @ref that begins with "prs:" followed by 5 uppercase letters and a number (e.g. prs:FORBR1).</sch:assert>
                 </sch:rule>
               </constraint>
             </constraintSpec>
          </elementSpec>
          
          <elementSpec ident="sex" module="namesdates" mode="change">
            <classes>
              <memberOf key="att.global" mode="delete"/>
              <memberOf key="att.typed" mode="delete"/>
            </classes>
            <attList>
              <attDef ident="val" mode="change" usage="req"/>
              <attDef ident="calendar" mode="delete"/>
              <attDef ident="type" mode="delete"/>
            </attList>
          </elementSpec>
          
          <elementSpec ident="birth" module="namesdates" mode="change">
            <classes mode="change">
              <memberOf key="att.global" mode="delete"/>
              <memberOf key="att.global.responsibility" mode="add"/>
              <memberOf key="att.dimensions" mode="delete"/>
              <memberOf key="att.naming" mode="delete"/>
              <memberOf key="att.canonical" mode="delete"/>
              <memberOf key="att.locatable" mode="add"/>
              <memberOf key="att.typed" mode="delete"/>
            </classes>
            <attList>
              <attDef ident="calendar" mode="delete"/>
            </attList>
          </elementSpec>
          
          <elementSpec ident="death" module="namesdates" mode="change">
            <classes mode="change">
              <memberOf key="att.global" mode="delete"/>
              <memberOf key="att.global.responsibility" mode="add"/>
              <memberOf key="att.dimensions" mode="delete"/>
              <memberOf key="att.naming" mode="delete"/>
              <memberOf key="att.canonical" mode="delete"/>
              <memberOf key="att.locatable" mode="add"/>
              <memberOf key="att.typed" mode="delete"/>
            </classes>
            <attList>
              <attDef ident="calendar" mode="delete"/>
            </attList>
          </elementSpec>
          
          <elementSpec ident="residence" module="namesdates" mode="change">
            <classes mode="change">
              <memberOf key="att.global" mode="delete"/>
              <!--Add custom att.locatable-->
              <memberOf key="att.locatable" mode="add"/>
              <memberOf key="att.naming" mode="delete"/>
            </classes>
            <attList>
              <attDef ident="calendar" mode="delete"/>
            </attList>
          </elementSpec>
          
          <elementSpec ident="faith" module="namesdates" mode="change">
            <classes mode="change">
              <memberOf key="att.global" mode="delete"/>
            </classes>
            <attList>
              <attDef ident="calendar" mode="delete"/>
              <attDef ident="ref" mode="change" usage="req">
                <valList type="closed" mode="add">
                  <valItem ident="rel:ChurchOfScotland" mode="add">
                    <desc>Church of Scotland</desc>
                    <gloss>Church of Scotland</gloss>
                  </valItem>
                  <valItem ident="rel:Episcopalian" mode="add">
                    <desc>Episcopalian</desc>
                    <gloss>Episcopalian</gloss>
                  </valItem>
                  <valItem ident="rel:Anglican" mode="add">
                    <desc>Anglican</desc>
                    <gloss>Anglican</gloss>
                  </valItem>
                  <valItem ident="rel:RomanCatholic" mode="add">
                    <desc>Roman Catholic</desc>
                    <gloss>Roman Catholic</gloss>
                  </valItem>
                  <valItem ident="rel:BritishOrthodox" mode="add">
                    <desc>British Orthodox</desc>
                    <gloss>British Orthodox</gloss>
                  </valItem>
                </valList>
              </attDef>
            </attList>
          </elementSpec>
          
          <elementSpec ident="nationality" module="namesdates" mode="change">
            <classes mode="change">
              <memberOf key="att.global" mode="delete"/>
            </classes>
            <attList>
              <!--Remove @role, which is provided by att.naming,
                but att.naming is a superset of att.canonical,
                which we want for ref.-->
              <attDef ident="role" mode="delete"/>
              <attDef ident="ref" mode="change" usage="req">
                <valList type="closed" mode="add">
                  <valItem ident="ntl:English" mode="add">
                    <desc>English</desc>
                    <gloss>English</gloss>
                  </valItem>
                  <valItem ident="ntl:French" mode="add">
                    <desc>French</desc>
                    <gloss>French</gloss>
                  </valItem>
                  <valItem ident="ntl:Spanish" mode="add">
                    <desc>Spanish</desc>
                    <gloss>Spanish</gloss>
                  </valItem>
                  <valItem ident="ntl:Irish" mode="add">
                    <desc>Irish</desc>
                    <gloss>Irish</gloss>
                  </valItem>
                  <valItem ident="ntl:Scottish" mode="add">
                    <desc>Scottish</desc>
                    <gloss>Scottish</gloss>
                  </valItem>
                  <valItem ident="ntl:Prussian" mode="add">
                    <desc>Prussian</desc>
                    <gloss>Prussian</gloss>
                  </valItem>
                  <valItem ident="ntl:Austrian" mode="add">
                    <desc>Austrian</desc>
                    <gloss>Austrian</gloss>
                  </valItem>
                  <valItem ident="ntl:Hanoverian" mode="add">
                    <desc>Hanoverian</desc>
                    <gloss>Hanoverian</gloss>
                  </valItem>
                  <valItem ident="ntl:Italian" mode="add">
                    <desc>Italian</desc>
                    <gloss>Italian</gloss>
                  </valItem>
                  <valItem ident="ntl:Dutch" mode="add">
                    <desc>Dutch</desc>
                    <gloss>Dutch</gloss>
                  </valItem>
                </valList>
              </attDef>
            </attList>
          </elementSpec>
          
          
          
          <elementSpec ident="langKnowledge" module="namesdates" mode="change">
            <classes mode="replace">
              <memberOf key="model.persStateLike"/>
            </classes>
          </elementSpec>
          
          <elementSpec ident="langKnown" module="namesdates" mode="change">
            <classes mode="change">
              <!--Add @cert and @resp explicitly-->
              <memberOf key="att.global.responsibility" mode="add"/>
            </classes>
            <attList>
              <!--We do not specify level of fluency-->
              <attDef ident="level" mode="delete"/>
            </attList>
          </elementSpec>
          
          <!--TODO: Figure out how best to represent nesting of places -->
          <elementSpec ident="place" module="namesdates" mode="change">
            <classes mode="change">
              <memberOf key="att.global.rendition" mode="delete"/>
              <memberOf key="att.typed" mode="delete"/>
              <memberOf key="att.global.analytic" mode="delete"/>
              <memberOf key="att.global.source" mode="delete"/>
            </classes>
            <content>
              <elementRef key="placeName" minOccurs="1" maxOccurs="unbounded"/>
              <elementRef key="note" minOccurs="0" maxOccurs="1"/>
              <elementRef key="linkGrp" minOccurs="0" maxOccurs="1"/>
            </content>
            <constraintSpec ident="place.mustHaveProperId" scheme="schematron">
              <desc>All people must have a proper id.</desc>
              <constraint>
                <sch:rule context="tei:place">
                  <sch:assert
                    test="matches(@xml:id,concat('^', $placeIdPattern, '$'))">ERROR: All people must have an @xml:id of 4 uppercase letters and a number (e.g. LEIT1).</sch:assert>
                </sch:rule>
              </constraint>
            </constraintSpec>
            <attList>
              <attDef ident="xml:id" mode="change" usage="req"/>
            </attList>
          </elementSpec>
          
          <elementSpec ident="placeName" module="namesdates" mode="change">
            <constraintSpec ident="placeName.mustHaveRefWithPlc" mode="add" scheme="schematron">
              <desc>All inline placeNames must have a ref that points to the place db.</desc>
              <constraint>
                <!--TODO: Remove @ref once feasible-->
                <sch:rule context="tei:placeName[not(parent::tei:place)][@ref] | tei:*[@where]">
                  <sch:let name="ptr" value="(@ref, @where)[1]"/>
                  <sch:assert test="matches($ptr ,concat('^plc:', $placeIdPattern, '$'))">ERROR: All <sch:name/> pointers must have an @<sch:value-of select="local-name($ptr)"/> that begins with "plc:" followed by 4 uppercase letters and a number (e.g. plc:LEIT1).</sch:assert>
                </sch:rule>
              </constraint>
            </constraintSpec>
          </elementSpec>


          <moduleRef key="tei"/>
          
          <classSpec ident="att.anchoring" type="atts" module="tei"
            mode="change">
            <attList>
              <attDef ident="targetEnd" mode="delete"/>
            </attList>
          </classSpec>
          <classSpec ident="att.breaking" type="atts" module="tei" 
            mode="delete"/>
          <classSpec ident="att.canonical" type="atts" module="tei"
            mode="change">
            <attList>
              <attDef ident="key" mode="delete"/>
            </attList>
          </classSpec>
          <classSpec ident="att.coordinated" type="atts" module="tei"
            mode="delete"/>
          <classSpec ident="att.cReferencing" module="tei" type="atts"
            mode="delete"/>
          <classSpec ident="att.damaged" type="atts" module="tei"
            mode="change">
            <attList>
              <attDef ident="group" mode="delete"/>
            </attList>
          </classSpec>
          <!--Add schematron rule for dtes pre 1752-->
          <!--Not dealing with att.datable at the moment; not sure if it's actually
            necessary, given that we can more-or-less automate that...-->
          
          <classSpec ident="att.datable" module="tei" type="atts" mode="change">
            <attList>
              <attDef ident="period" mode="delete"/>
            </attList>
          </classSpec>
          
          <classSpec ident="att.datable.custom" module="namesdates" type="atts" mode="change">
            <attList>
              <attDef ident="datingPoint" mode="delete"/>
            </attList>
          </classSpec>
          
          <!--<classSpec ident="att.datable" module="tei" type="atts" mode="change">
            <constraintSpec ident="pre1752.mustBeCustom" scheme="schematron">
              <constraint>
                <sch:pattern>
                  <sch:rule context="tei:*[@when | @from | @to | @notBefore | @notAfter]">
                    <sch:let name="dateAtts" value="(@when | @from | @to | @notBefore | @notAfter)"/>
                    <sch:let name="errors" value="$dateAtts[xs:date(string-join((tokenize(.,'-'),'01','01')[position() lt 4],'-')) lt $cutoff]"/>
                    <sch:assert test="empty($errors)">ERROR: Dates before 1752 must use a @*-custom attribute with the proper dating method.</sch:assert>
                  </sch:rule>
                </sch:pattern>
              </constraint>
            </constraintSpec>
          </classSpec>
          <classSpec ident="att.datable.custom" module="namesdates" type="atts">
            <constraintSpec ident="pre1752.customRequiresDatingMethod" scheme="schematron">
              <constraint>
                <sch:pattern>
                  <sch:rule context="tei:*[@when-custom | @from-custom | @to-custom | @notBefore-custom | @notAfter-custom]">
                    <sch:let name="dateAtts" value="(@when-custom | @from-custom | @to-custom | @notBefore-custom | @notAfter-custom)"/>
                    <sch:assert test="@datingMethod">ERROR @*-custom dates require a dating method.</sch:assert>
                  </sch:rule>
                </sch:pattern>
              </constraint>
            </constraintSpec>
            <attList>
              <attDef ident="datingMethod" mode="change">
                <valList>
                  <valItem ident="cal:julian" mode="add">
                      <desc>Julian</desc>
                      <gloss>The Julian Calendar (used pre-1752)</gloss>
                  </valItem>
                </valList>
              </attDef>
            </attList>
          </classSpec>-->
          
          <classSpec ident="att.datable.iso" module="tei" type="atts"
            mode="delete"/>
          <classSpec ident="att.datcat" module="tei"
            type="atts" mode="delete"/>
          <classSpec ident="att.declarable" module="tei" type="atts"
            mode="delete"/>
          <classSpec ident="att.declaring" module="tei" type="atts"
            mode="delete"/>
          <classSpec ident="att.divLike" module="tei" type="atts"
            mode="delete"/>
          <classSpec ident="att.edition" module="tei" type="atts"
            mode="delete"/>
          <classSpec ident="att.editLike" module="tei" type="atts"
            mode="change">
            <attList>
              <attDef ident="instant" mode="delete"/>
            </attList>
          </classSpec>
          <classSpec ident="att.global.facs" type="atts" mode="change">
            <!--Restrict the use of @facs to only allow lib:-->
            <attList>
              <attDef ident="facs" mode="change">
                <datatype maxOccurs="1">
                  <dataRef name="token" restriction="lib:\d+"/>
                </datatype>
              </attDef>
            </attList>
            <remarks>
              <p>The facs attribute should contain only a single pointer of the form lib:\d+ (i.e. lib: followed by 1 or more digit).</p>
            </remarks>
          </classSpec>
          <classSpec ident="att.global" module="tei" type="atts"
            mode="change">
            <classes mode="change">
              <!--Remove facs and responsibility from the global modules,
                so we can add them on the individual elements that we need-->
              <memberOf key="att.global.facs" mode="delete"/>
              <memberOf key="att.global.responsibility" mode="delete"/>
              <memberOf key="att.global.linking" mode="delete"/>
            </classes>
            <attList>
              <!--We'll never need space or base, afaik-->
              <attDef ident="xml:space" mode="delete"/>
              <attDef ident="xml:base" mode="delete"/>
            </attList>
          </classSpec>
          <!--Remove change everywhere-->
          <classSpec ident="att.global.change" module="transcr" type="atts"
            mode="delete" />
          <classSpec ident="att.global.rendition" module="tei" type="atts"
            mode="change">
            <attList>
              <!--Delete @rend, since it's too ambiguous to be useful-->
              <attDef ident="rend" mode="delete"/>
              <!--Delete style unless we think that's important-->
              <attDef ident="style" mode="delete"/>
              <!--And constraint rendition-->
              <attDef ident="rendition" mode="change">
                <valList type="closed" mode="add">
                  <valItem ident="rnd:super">
                    <desc>superscript</desc>
                    <gloss>superscript</gloss>
                  </valItem>
                  <valItem ident="rnd:sub">
                    <desc>subscript</desc>
                    <gloss>subscript</gloss>
                  </valItem>
                  <valItem ident="rnd:underlined">
                    <gloss>underlined</gloss>
                    <desc>underlined (NOTE: This should be used almost exclusively with emph or title)</desc>
                  </valItem>
                  <valItem ident="rnd:right-braced">
                    <gloss>right-braced</gloss>
                    <desc>An item that has a curly right brace.</desc>
                  </valItem>
                </valList>
              </attDef>
            </attList>
          </classSpec>
          <classSpec ident="att.global.linking" module="tei" type="atts" mode="change">
            <attList>
              <attDef ident="synch" mode="delete"/>
              <attDef ident="sameAs" mode="delete"/>
              <attDef ident="copyOf" mode="delete"/>
              <attDef ident="next" mode="delete"/>
              <attDef ident="prev" mode="delete"/>
              <attDef ident="exclude" mode="delete"/>
              <attDef ident="select" mode="delete"/>
            </attList>
          </classSpec>
          <classSpec ident="att.linguistic" module="analysis"
            type="atts" mode="delete"/> 
          <classSpec ident="att.naming" module="tei" type="atts"
          mode="change">
            <attList>
              <attDef ident="nymRef" mode="delete"/>
            </attList>
          </classSpec>
          <classSpec ident="att.notated" module="tei" type="atts"
            mode="delete"/>
          <classSpec ident="att.personal" module="tei" type="atts" mode="change">
            <attList>
              <attDef ident="full" mode="delete"/>
              <attDef ident="sort" mode="delete"/>
            </attList>
          </classSpec>
          <classSpec ident="att.placement" module="tei" type="atts"
            mode="change">
            <attList>
              <attDef ident="place" mode="change">
                <valList type="closed" mode="replace">
                  <valItem ident="left" mode="add">
                    <gloss>left</gloss>
                    <desc>in the left margin</desc>
                  </valItem>
                  <valItem ident="right" mode="add">
                    <gloss>right</gloss>
                    <desc>in the right margin</desc>
                  </valItem>
                  <valItem ident="above" mode="add">
                    <gloss>above</gloss>
                    <desc>above the line</desc>
                  </valItem>
                  <valItem ident="below" mode="add">
                    <gloss>below</gloss>
                    <desc>below the line</desc>
                  </valItem>
                  <valItem ident="inline" mode="add">
                    <gloss>inline</gloss>
                    <desc>an inline note</desc>
                  </valItem>
                </valList>
              </attDef>
            </attList>
          </classSpec>
          <classSpec ident="att.pointing" module="tei" type="atts"
            mode="change">
            <attList>
              <attDef ident="targetLang" mode="delete"/>
              <attDef ident="evaluate" mode="delete"/>
            </attList>
          </classSpec>
          <classSpec ident="att.pointing.group" mode="delete"
            module="tei" type="atts"/>
          <classSpec ident="att.segLike" module="tei" mode="change" type="atts">
            <attList>
              <attDef ident="function" mode="delete"/>
            </attList>
          </classSpec>
          
          <!--Remove spanning-->
          <classSpec ident="att.spanning" module="tei" type="atts"
            mode="delete"/>
          <classSpec ident="att.sortable" module="tei" type="atts"
            mode="delete"/>
          <classSpec ident="att.timed" module="tei" type="atts"
            mode="delete"/>
          <classSpec ident="att.typed" module="tei" type="atts" mode="change">
            <attList>
              <!--Remove subtype for now-->
              <attDef ident="subtype" mode="delete"/>
            </attList>
            
          </classSpec>
          <classSpec ident="att.transcriptional"
            module="tei" type="atts"
            mode="delete"/>

          <!--DATA SPECS-->
          <dataSpec module="tei" ident="teidata.language" mode="change">
            <content>
              <alternate>
                <dataRef name="language"/>
                <!--Add the subset of languages we know we might use
                  so far-->
                <valList mode="add" type="semi">
                  <valItem ident="la">
                    <desc>la</desc>
                    <gloss>Latin</gloss>
                  </valItem>
                  <valItem ident="en">
                    <desc>en</desc>
                    <gloss>English</gloss>
                  </valItem>
                  <valItem ident="fr">
                    <desc>fr</desc>
                    <gloss>French</gloss>
                  </valItem>
                  <valItem ident="gr">
                    <desc>gr</desc>
                    <gloss>Greek</gloss>
                  </valItem>
                  <valItem ident="ga">
                    <desc>ga</desc>
                    <gloss>Irish</gloss>
                  </valItem>
                  <valItem ident="gd">
                    <desc>gd</desc>
                    <gloss>Scottish Gaelic</gloss>
                  </valItem>
                  <valItem ident="de">
                    <desc>de</desc>
                    <gloss>German</gloss>
                  </valItem>
                  <valItem ident="es">
                    <desc>es</desc>
                    <gloss>Spanish</gloss>
                  </valItem>
                  <valItem ident="sco">
                    <desc>sco</desc>
                    <gloss>Scots</gloss>
                  </valItem>
                  <valItem ident="ghc">
                    <desc>ghc</desc>
                    <gloss>Hiberno-Scottish Gaelic</gloss>
                  </valItem>
                </valList>
              </alternate>
            </content>
            
          </dataSpec>
          
          <!-- TEXTSTRUCTURE -->
          <moduleRef key="textstructure"
            include="TEI body byline closer dateline div docAuthor docDate docEdition docImprint docTitle epigraph front imprimatur opener postscript salute signed titlePage titlePart text trailer"/>
          
          <elementSpec ident="div" mode="change" module="textstructure">
            <constraintSpec ident="div.onlyRootWithIndexAndVolume11" scheme="schematron" mode="add">
                <desc>Only index divs are allowed as a root div element and only for vol 11.</desc>
                <constraint>
                  <sch:pattern>
                    <sch:rule context="/tei:div">
                      <sch:assert test="@type = 'index'">ERROR: Only divisions with @type='index' are allowed
                      as root elements.</sch:assert>
                      <sch:assert test="matches($uri,'vol11_')">ERROR: Only use root divs for volume 11.</sch:assert>
                    </sch:rule>
                  </sch:pattern>
                </constraint>
            </constraintSpec> 
              <attList>
                <attDef ident="type" mode="change">
                    <valList mode="add" type="closed">
                      <valItem ident="index">
                        <gloss>index</gloss>
                        <desc>An index/table of contents for a single volume.</desc>
                      </valItem>
                      <valItem ident="preface">
                        <gloss>preface</gloss>
                        <desc>A preface or some prefatory matter to a volume or text.</desc>
                      </valItem>
                    </valList>
                </attDef>
              </attList>
          </elementSpec>
          
          <elementSpec ident="item" mode="change" module="textstructure">
            <constraintSpec ident="item.indexItemsMustHaveTitleAndNum" scheme="schematron" mode="add">
              <desc>All index items must contain a title and a number</desc>
              <constraint>
                <sch:pattern>
                  <sch:rule context="tei:div[@type='index']/tei:list/tei:item">
                    <sch:assert test="count(tei:num) = 1">ERROR: All index items must contain one num element.</sch:assert>
                    <sch:assert test="count(descendant::tei:title) gt 0">ERROR: All index items must contain at least one title element.</sch:assert>
                  </sch:rule>
                </sch:pattern>
              </constraint>
            </constraintSpec>
          </elementSpec>
          
          <!--Transcription module-->
          <moduleRef key="transcr"
            include="damage facsimile fw handNotes handShift supplied surface surfaceGrp zone"/>
          
          <elementSpec ident="facsimile" module="transcr" mode="change">
              <classes mode="change">
                <memberOf key="att.global.linking" mode="add"/>
              </classes>
          </elementSpec>
          
          <elementSpec ident="fw" module="transcr" mode="change">
            <constraintSpec ident="fw.pageNum.mustHavePlace" scheme="schematron">
              <desc>All pageNum formeworks must have an @place</desc>
              <constraint>
                <sch:pattern>
                  <sch:rule context="tei:fw[@type=('pageNum', 'folioNum')]">
                    <sch:assert test="@place">ERROR: Missing required @place attribute for page number formework.</sch:assert>
                  </sch:rule>
                </sch:pattern>
              </constraint>
            </constraintSpec>
            <attList>
              <attDef ident="type" mode="change" usage="req">
                <valList mode="add" type="closed">
                  <valItem ident="pageNum">
                    <gloss>page number</gloss>
                    <desc>A page number, usually written on the top left or right hand sides of a page.</desc>
                  </valItem>
                  <valItem ident="catchword">
                    <gloss>catchword</gloss>
                    <desc>A catchword, usually on the bottom right of the page.</desc>
                  </valItem>
                  <valItem ident="sig">
                    <gloss>signature</gloss>
                    <desc>A page signature, usually on the bottom center of the page.</desc>
                  </valItem>
                  <valItem ident="folioNum">
                    <gloss>folio number</gloss>
                    <desc>A folio number, usually written on the top left or right hand sides of a page.</desc>
                  </valItem>
                </valList>
              </attDef>
            </attList>
          </elementSpec>
          
          <!--CUSTOMIZATIONS -->
          <moduleSpec ident="lim"/>
          
          <!-- CUSTOM CLASS SPECIFICATION:
            att.locatable-->
          <classSpec ident="att.locatable" module="lim" type="atts" mode="add">
           <attList>
             <attDef ident="where" usage="opt">
               <desc versionDate="2007-06-11" xml:lang="en">indicates the location of an event by pointing to a <gi>place</gi> element</desc>
               <datatype>
                 <dataRef key="teidata.pointer"/>
               </datatype>
             </attDef>
           </attList> 
          </classSpec>
          
          <macroSpec ident="lim.personMacro" module="lim" mode="add">
            <content>
              <elementRef key="persName" minOccurs="1" maxOccurs="unbounded"/>
              <sequence preserveOrder="false">
                <elementRef key="sex" minOccurs="0" maxOccurs="1"/>
                <elementRef key="birth" minOccurs="0" maxOccurs="1"/>
                <elementRef key="death" minOccurs="0" maxOccurs="1"/>
                <elementRef key="faith" minOccurs="0" maxOccurs="unbounded"/>
                <elementRef key="occupation" minOccurs="0" maxOccurs="unbounded"/>
                <elementRef key="nationality" minOccurs="0" maxOccurs="unbounded"/>
                <elementRef key="residence" minOccurs="0" maxOccurs="unbounded"/>
                <elementRef key="langKnowledge" minOccurs="0" maxOccurs="1"/>
              </sequence>
              <elementRef key="note"/>
            </content>
          </macroSpec>
          
          
          <!--Global variables for constraints-->
          <constraintSpec scheme="schematron" ident="global.variables">
            <desc>Global variables for use across the schematron.</desc>
            <constraint>
              <sch:pattern>
                <sch:let name="id" value="/tei:*/@xml:id"/>
                <sch:let name="uri" value="document-uri(/)"/>
                <sch:let name="basename" value="tokenize($uri,'[/\\\.]')[last() - 1]"/>
                <sch:let name="placeIdPattern" value="'[A-Z]{4}\d+'"/>
                <sch:let name="persIdPattern" value="'[A-Z]{5}\d+'"/>
                <sch:let name="cutoff" value="xs:date('1752-09-02')"/>
               <!-- <sch:let name="pd" value="replace($uri,'^(.+[/\\]lim-tei[\\/]).+$', '$1')"/>
                <sch:let name="dataDir" value="replace($pd,'(.+(.))$','$1data$2')"/>
                <sch:let name="glyphs"
                  value="document($dataDir || 'glyphs.xml')//tei:glyph[@xml:id]"/> -->
                
              </sch:pattern>
     
            </constraint>
          </constraintSpec>
          
          <!--GLOBAL CONSTRAINTS-->
          <constraintSpec scheme="schematron" ident="global.rootIdMustMatchDocument">
            <desc>The rootid must be the same as the document's name.</desc>
            <constraint>
              <sch:pattern>
                <sch:rule context="/tei:*">
                  <sch:assert test="$basename = $id">
                    ERROR: Document's @xml:id (<sch:value-of select="$id"/>) must match the document's base filename
                    (<sch:value-of select="$basename"/>)
                  </sch:assert>
                </sch:rule>
              </sch:pattern>
            </constraint>
          </constraintSpec>
          
          <constraintSpec scheme="schematron" ident="inlineElementsNoSpaces">
            <desc>Inline elements should not begin or end with spaces.</desc>
            <constraint>
              <sch:pattern>
                <sch:rule context="tei:title | tei:num | tei:ref | tei:rs | tei:placeName[not(parent::tei:place)] | tei:persName[not(parent::tei:person)]">
                  <sch:let name="text" value="string(.)"/>
                  <sch:assert test="not(matches($text, '^\s+|\s+$'))">
                    ERROR: <sch:name/> should not begin or end with spaces.
                  </sch:assert>
                </sch:rule>
              </sch:pattern>
            </constraint>
          </constraintSpec>
        </schemaSpec>
      </div>
    </back>
  </text>
</TEI>
